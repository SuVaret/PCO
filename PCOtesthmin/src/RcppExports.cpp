// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// crit_GK_exact_1D
Eigen::VectorXd crit_GK_exact_1D(Eigen::VectorXd xi, Eigen::ArrayXd H);
RcppExport SEXP _PCOtesthmin_crit_GK_exact_1D(SEXP xiSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Eigen::ArrayXd >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(crit_GK_exact_1D(xi, H));
    return rcpp_result_gen;
END_RCPP
}
// crit_EK_exact_1D
Eigen::VectorXd crit_EK_exact_1D(Eigen::VectorXd xi, Eigen::ArrayXd H);
RcppExport SEXP _PCOtesthmin_crit_EK_exact_1D(SEXP xiSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Eigen::ArrayXd >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(crit_EK_exact_1D(xi, H));
    return rcpp_result_gen;
END_RCPP
}
// crit_BK_exact_1D
Eigen::VectorXd crit_BK_exact_1D(Eigen::VectorXd xi, Eigen::ArrayXd H);
RcppExport SEXP _PCOtesthmin_crit_BK_exact_1D(SEXP xiSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Eigen::ArrayXd >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(crit_BK_exact_1D(xi, H));
    return rcpp_result_gen;
END_RCPP
}
// crit_GK_exact_mD_diag
Eigen::VectorXd crit_GK_exact_mD_diag(Eigen::MatrixXd x_i, List H, Eigen::VectorXd hmin);
RcppExport SEXP _PCOtesthmin_crit_GK_exact_mD_diag(SEXP x_iSEXP, SEXP HSEXP, SEXP hminSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< List >::type H(HSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type hmin(hminSEXP);
    rcpp_result_gen = Rcpp::wrap(crit_GK_exact_mD_diag(x_i, H, hmin));
    return rcpp_result_gen;
END_RCPP
}
// crit_GK_exact_mD_full
Eigen::VectorXd crit_GK_exact_mD_full(Eigen::MatrixXd x_i, List H, Eigen::MatrixXd hmin);
RcppExport SEXP _PCOtesthmin_crit_GK_exact_mD_full(SEXP x_iSEXP, SEXP HSEXP, SEXP hminSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< List >::type H(HSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type hmin(hminSEXP);
    rcpp_result_gen = Rcpp::wrap(crit_GK_exact_mD_full(x_i, H, hmin));
    return rcpp_result_gen;
END_RCPP
}
// risque_Lp
double risque_Lp(int p, NumericVector f, NumericVector o_i, NumericVector x, double hopt_c, double a, double b);
RcppExport SEXP _PCOtesthmin_risque_Lp(SEXP pSEXP, SEXP fSEXP, SEXP o_iSEXP, SEXP xSEXP, SEXP hopt_cSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type o_i(o_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type hopt_c(hopt_cSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(risque_Lp(p, f, o_i, x, hopt_c, a, b));
    return rcpp_result_gen;
END_RCPP
}
// risque_Lp_mD_3
double risque_Lp_mD_3(int p, Eigen::VectorXd f, Eigen::MatrixXd o_i, int nQMC, Eigen::MatrixXd h, Eigen::VectorXd a, Eigen::VectorXd b);
RcppExport SEXP _PCOtesthmin_risque_Lp_mD_3(SEXP pSEXP, SEXP fSEXP, SEXP o_iSEXP, SEXP nQMCSEXP, SEXP hSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type f(fSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type o_i(o_iSEXP);
    Rcpp::traits::input_parameter< int >::type nQMC(nQMCSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type h(hSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type a(aSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(risque_Lp_mD_3(p, f, o_i, nQMC, h, a, b));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _PCOtesthmin_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PCOtesthmin_crit_GK_exact_1D", (DL_FUNC) &_PCOtesthmin_crit_GK_exact_1D, 2},
    {"_PCOtesthmin_crit_EK_exact_1D", (DL_FUNC) &_PCOtesthmin_crit_EK_exact_1D, 2},
    {"_PCOtesthmin_crit_BK_exact_1D", (DL_FUNC) &_PCOtesthmin_crit_BK_exact_1D, 2},
    {"_PCOtesthmin_crit_GK_exact_mD_diag", (DL_FUNC) &_PCOtesthmin_crit_GK_exact_mD_diag, 3},
    {"_PCOtesthmin_crit_GK_exact_mD_full", (DL_FUNC) &_PCOtesthmin_crit_GK_exact_mD_full, 3},
    {"_PCOtesthmin_risque_Lp", (DL_FUNC) &_PCOtesthmin_risque_Lp, 7},
    {"_PCOtesthmin_risque_Lp_mD_3", (DL_FUNC) &_PCOtesthmin_risque_Lp_mD_3, 7},
    {"_PCOtesthmin_rcpp_hello_world", (DL_FUNC) &_PCOtesthmin_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_PCOtesthmin(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
